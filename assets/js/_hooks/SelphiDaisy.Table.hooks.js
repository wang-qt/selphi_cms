/*
This file was generated by the Surface compiler.
*/


class LiveTable {
    over_all;
    over_all_bottom;
    rows;
    batch_actions;
    check_results;
    constructor(){
        this.over_all = document.querySelector('#over-all-check');
        this.over_all_bottom = document.querySelector('#over-all-check-bottom');
        this.rows = document.querySelectorAll('input[name="check_rows"]');
        this.batch_actions = document.querySelectorAll('a[class="batch_action"]');
        this.check_results = document.getElementById("check-results");

        this.over_all.addEventListener('click',this.checkAll)
        this.over_all_bottom.addEventListener('click',this.checkAllBottom)

        for (var i = 0; i < this.rows.length; i++) {
            this.rows[i].addEventListener('click', this.checkOne)
        }
    }

    // 表格内容发生 变化，重新注册 行检查框事件
    rebindRowEvents = () => {

        console.log("rebindRowEvents changed  count:" + this.rows.length )
        // 先把 上次的事件注册取消
        for (var i = 0; i < this.rows.length; i++) {
            this.rows[i].removeEventListener('click', this.checkOne)
        }
        // 进行新的 事件注册
        this.rows = document.querySelectorAll('input[name="check_rows"]');
        for ( i = 0; i < this.rows.length; i++) {
            this.rows[i].addEventListener('click', this.checkOne)
        }
    }

    // 单击一个检查框
    checkOne = () => {
        console.log("checkOne changed")

        var  isCheck = false
        //  至少有一个 检查框为选中
        for (var i = 0; i < this.rows.length; i++) {
            if (this.rows[i].checked === true){
                isCheck = true;
                break;
            }
        }

        if( isCheck === true){
            this.over_all.checked = true;
            this.over_all_bottom.checked = true;
        }else{
            this.over_all.checked = false;
            this.over_all_bottom.checked = false;
        }
        // 重新计算选中
        this.updateDisplay();
    }

    checkAll = () => {
        console.log("checkAll changed")

        if (this.over_all.checked) {
            var i;
            for ( i = 0; i < this.rows.length; i++) {
                this.rows[i].checked = true;
            }
            this.over_all_bottom.checked = true;
        } else {
            for ( i = 0; i < this.rows.length; i++) {
                this.rows[i].checked = false;
            }
            this.over_all_bottom.checked = false;
        }

        // 重新计算选中
        this.updateDisplay();
    }
    checkAllBottom = () => {
        console.log("checkAllBottom changed")

        if (this.over_all_bottom.checked) {
            var i;
            for ( i = 0; i < this.rows.length; i++) {
                this.rows[i].checked = true;
            }
            this.over_all.checked = true;
        } else {
            for ( i = 0; i < this.rows.length; i++) {
                this.rows[i].checked = false;
            }
            this.over_all.checked = false;
        }

        // 重新计算选中
        this.updateDisplay();
    }

    updateDisplay = () => {
        var ids = "";
        var count =0;
        for (var i = 0; i < this.rows.length; i++) {
            if (this.rows[i].checked === true) {
                ids = ids + this.rows[i].value + ","
                count++;
            }
        }
        // 更新 batch_actions 的 上报 value
        for ( i = 0; i < this.batch_actions.length; i++) {
            this.batch_actions[i].setAttribute('phx-value-ids', ids);
        }

        // 显示隐藏  nav action
        if (this.over_all.checked) {
            this.check_results.style.visibility = 'visible';
            var result_content = document.querySelector('#results-content');
            result_content.innerHTML = "选中了 " + count +" 项"
        }else{
            this.check_results.style.visibility = 'hidden';
        }

    }

}
export default LiveTable;




let  Table = {

    mounted(){
        console.log("LiveTable mounted")


       this.liveTable = new LiveTable()


        // for(var i = 0; i < rows.length; i++) {
        //     rows[i].addEventListener('click', updateDisplay);
        // }

        // 注册 refresh-check-results 事件
        this.handleEvent("refresh-check-results", ({ type, content }) => {
            console.log(`LiveTable received braodcast type: ${type}  content: ${content}` )

            // 表格内容发生 变化，重新注册 行检查框事件
            this.liveTable.rebindRowEvents()
        })
    },
    updated() {

    },


};


export {Table};